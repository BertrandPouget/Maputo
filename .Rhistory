legend("topleft",legend = colnames(azioni),col=c('blue','green','cyan','red'),
lty=1,lwd=3,cex=1.4)
matplot
open(ssss)
library(readr)
dataset <- read_table2(NULL, col_names = FALSE)
miii <- read.csv2("C:/Users/giuli/Downloads/miii.csv", encoding="UTF-8", header=FALSE, sep="")
View(miii)
miii[135,1]=995728
miii[135,2]=11.4
miii=miii[!136,]
miii <- read.csv2("C:/Users/giuli/Downloads/miii.csv", encoding="UTF-8", header=FALSE, sep="")
View(miii)
miii[135,1]=995728
miii[135,2]=11.4
miii=miii[-miii[136,],]
miii=rbind(miii[1:135,],miii[137:,])
miii=rbind(miii[1:135,],miii[137:154,])
attach(miii)
mean(V2)
median(V2)
min(V2)
max(V2)
hist(V2)
boxplot(v2)
boxplot(V2)
quantiles(V2)
quantile(V2)
help("hist")
hist(V2,breaks=c(0:1:33))
v=1:3
names(v)=c("a","b","c")
v[4]=4
v[4]
rm(list=ls())
library(sf)
library(sp)
library(ggplot2)
library(rgdal)
library(sp)
library(raster)
library(rgl)
data = st_read("datonite.shp")
setwd("C:/Users/giuli/OneDrive/Desktop/Maputo")
data = st_read("datonite.shp")
data = data[order(as.numeric(data$id)),]
head(data[which(data$osm_surf=="paved"),])
head(data[which(data$osm_surf=="unpaved"),])
img_paved = brick("img__1573.tif")
img_paved = brick("img__1573.tif")
img_paved = brick("img__1573.tif")
setwd("C:/Users/giuli/OneDrive/Desktop/Maputo/rater_mask_datonite")
img_paved = brick("img__1573.tif")
setwd("C:/Users/giuli/OneDrive/Desktop/Maputo")
plotRGB(img_paved)
names(img_paved) = c("redBand","greenBand", "blueBand", "null")
plot(img_paved, col=gray(1:100/100))
{
par(mfrow=c(1,3))
hist(img_paved$redBand, xlab="", main='red values', col='red')
hist(img_paved$greenBand, xlab="", main='green values', col='green')
hist(img_paved$blueBand, xlab="", main='blue values', col='blue')
par(mfrow=c(1,1))
}
val_paved = data.frame(values(img_paved)[which(apply(values(img_paved),1,sum)!=0),])
{
par(mfrow=c(1,3))
hist(val_paved$redBand, xlab="", main='red values', col='red')
hist(val_paved$greenBand, xlab="", main='green values', col='green')
hist(val_paved$blueBand, xlab="", main='blue values', col='blue')
par(mfrow=c(1,1))
}
graphics.off()
attach(val_paved)
plot3d(redBand, greenBand, blueBand)
detach(val_paved)
val_tot = data.frame(values(img_paved))
attach(val_tot)
dat.e <- dist(val_tot[,1:3], method = "euclidean")
dat.ec <- hclust(dat.e, method = "complete")
cluster.ec <- cutree(dat.ec, k=3)
cluster.ec
plot3d(val_tot[,1:3], col=cluster.ec+1, pch=19)
for(i in 1:dim(values(img_paved))[1])
if(sum(values(img_paved)[i,])!=0 && cluster.ec[i]==1)
{
values(img_paved)[i,1]=0
values(img_paved)[i,2]=0
values(img_paved)[i,3]=0
}
x11()
plotRGB(img_paved)
for(i in 1:dim(values(img_paved))[1])
if(sum(values(img_paved)[i,])!=0)
if(cluster.ec[i]==1)
{
values(img_paved)[i,1]=0
values(img_paved)[i,2]=0
values(img_paved)[i,3]=0
}
setwd("C:/Users/giuli/OneDrive/Desktop/Maputo/rater_mask_datonite")
img_paved = brick("img__1573.tif")
img_paved = brick("img__1573.tif")
cluster.ec
for(i in 1:dim(values(img_paved))[1])
if(sum(values(img_paved)[i,])!=0)
if(cluster.ec[i]==1)
{
values(img_paved)[i,1]=0
values(img_paved)[i,2]=0
values(img_paved)[i,3]=0
}
setwd("C:/Users/giuli/OneDrive/Desktop/Maputo")
#Ricorda di settare la tua working directory da Session!
rm(list=ls())
library(sf)
library(sp)
library(ggplot2)
library(rgdal)
library(sp)
library(raster)
data = st_read("datonite.shp")
data = data[order(as.numeric(data$id)),]
head(data[which(data$osm_surf=="paved"),])
head(data[which(data$osm_surf=="unpaved"),])
#Importiamo un esempio di imm
setwd("C:/Users/giuli/OneDrive/Desktop/Maputo/rater_mask_datonite")
img_paved = brick("img__1573.tif")
plotRGB(img_paved);
setwd("C:/Users/giuli/OneDrive/Desktop/Maputo")
names(img_paved) = c("redBand","greenBand", "blueBand", "null")
plot(img_paved, col=gray(1:100/100))
#Plottiamo gli istogrammi (di tutta l'immagine)
{
par(mfrow=c(1,3))
hist(img_paved$redBand, xlab="", main='red values', col='red')
hist(img_paved$greenBand, xlab="", main='green values', col='green')
hist(img_paved$blueBand, xlab="", main='blue values', col='blue')
par(mfrow=c(1,1))
}
#Rimuoviamo i pixel neri e riplottiamo gli istogrammi
val_paved = data.frame(values(img_paved)[which(apply(values(img_paved),1,sum)!=0),])
{
par(mfrow=c(1,3))
hist(val_paved$redBand, xlab="", main='red values', col='red')
hist(val_paved$greenBand, xlab="", main='green values', col='green')
hist(val_paved$blueBand, xlab="", main='blue values', col='blue')
par(mfrow=c(1,1))
}
graphics.off()
attach(val_paved)
plot3d(redBand, greenBand, blueBand)
detach(val_paved)
val_tot = data.frame(values(img_paved))
attach(val_tot)
dat.e <- dist(val_tot[,1:3], method = "euclidean")
dat.ec <- hclust(dat.e, method = "complete")
plot(dat.ec, main='euclidean-complete', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(dat.ec, k=2)
cluster.ec <- cutree(dat.ec, k=3)
cluster.ec
plot3d(val_tot[,1:3], col=cluster.ec+1, pch=19)
for(i in 1:dim(values(img_paved))[1])
if(sum(values(img_paved)[i,])!=0)
{
if(cluster.ec[i]==1)
{
values(img_paved)[i,1]=255
values(img_paved)[i,2]=0
values(img_paved)[i,3]=0
}
else if(cluster.ec[i]!=2)
{
values(img_paved)[i,1]=0
values(img_paved)[i,2]=0
values(img_paved)[i,3]=255
}
}
x11()
plotRGB(img_paved)
